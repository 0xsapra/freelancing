#include<stdio.h>
#include<stdlib.h>
#include<math.h>

#define MAX_NA 50
#define MAX(X, Y) ((X > Y) ? X : Y)

struct assignment_struct{
	int number;
	int score;
	int weight;
	int late_days;
	int value;
	int real_score;
	int active;
};

double square(double num){
	return num * num;
}

struct assignment_struct* inputAssignment(){

	struct assignment_struct* assignment = (struct assignment_struct*)
									malloc(sizeof(struct assignment_struct));
	scanf("%d,%d,%d,%d", 
			&assignment->number, 
			&assignment->score,
			&assignment->weight,
			&assignment->late_days);
	assignment->active = 1; /* active will be 0 for dropped assignments*/
	assignment->value = assignment->score * assignment->weight;
	return assignment;
}

void swap(struct assignment_struct** assignments, int i, int j){
	struct assignment_struct* assignment = assignments[i];
	assignments[i] = assignments[j];
	assignments[j] = assignment;
	return;
}

void sort_assignment(struct assignment_struct** assignments, int na){
	int i,j;

	for(i=0; i<na;i++){
		for(j=i; j<na;j++){
			if(assignments[i]->number > assignments[j]->number){
				swap(assignments, i, j);
			}
		}
	}
}

void print_assignments(struct assignment_struct** assignments, int na){
	
	int i;

	for(i=0;i<na;i++){
		printf("%d, %d, %d, %d\n", 
			assignments[i]->number,
			assignments[i]->score,
			assignments[i]->weight,
			assignments[i]->late_days
		);
	}
	return;
}

void print_stats(struct assignment_struct** assignments, int na){
	int i, sum = 0;
	double mean = 0, sd = 0;
	
	for(i=0; i<na; i++){
		sum += assignments[i]->real_score;
	}
	mean = sum / na;
	for(i=0; i<na; i++){
		sd+= square(assignments[i]->real_score - mean);
	}
	sd = sqrt(sd / na);
	printf("Mean: %5.4f, Standard Deviation: %5.4f\n", mean, sd);
	return;
}

/*void drop_or_adjust_assignments(struct assignment_struct** assignments, int na, int nd){


	return;
}*/

int main(){

	int penalty_per_day;
	int nd; /* number of assignments to drop*/
	char stats; /* Y/N , i.e should we generate stats or not*/
	int na; /* number of assignments*/
	int weight_total = 0;
	float numeric_score = 0;
	int isActive;
	int score, late;
	int i; /* index counter*/
	struct assignment_struct* assignments[MAX_NA]; /* array of assignment*/

	scanf("%d %d %c", &penalty_per_day, &nd, &stats);
	scanf("%d", &na);

	if(na > MAX_NA){
		printf("Maximum assignments is 50\n");
		return 1;
	}
	for(i=0; i<na; i++){
		assignments[i] = inputAssignment();
		score = assignments[i]->score;
		late = assignments[i]->late_days;
		assignments[i]->real_score = MAX( score - (late * penalty_per_day) , 0);
		weight_total += assignments[i]->weight;
	}

	if(weight_total != 100){
		printf("ERROR: Invalid values provided\n");
		return 1;
	}

	sort_assignment(assignments, na);

	/* drop and adjust assignments*/
	/* drop_or_adjust_assignments(assignments, na, nd); */
	/* calculate numeric score*/
	for(i=0; i<na; i++){
		isActive = assignments[i]->active;
		if(isActive == 1){
			int real_score = assignments[i]->real_score;
			int weight = assignments[i]->weight;
			numeric_score += ( (real_score * weight) / 100);	
		}
	}
	/* print stuff*/
	printf("Numeric Score: %5.4f\n", numeric_score);
	printf("Points Penalty Per Day Late: %d\n",penalty_per_day );
	printf("Number of Assignments Dropped: %d\n",nd );
	printf("Values Provided:\n");
	printf("Assignment, Score, Weight, Days Late\n");
	print_assignments(assignments, na);
	/* print stats*/
	if(stats == 'Y' || stats=='y'){
		print_stats(assignments, na);
	}
	return 0;
}